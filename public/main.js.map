{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///./src/client/constants.ts","webpack:///./src/client/actions/index.ts","webpack:///./src/client/index.dev.tsx","webpack:///./src/client/routes/index.ts","webpack:///./src/client/containers/App.tsx","webpack:///./src/client/components/Header.tsx","webpack:///./src/client/containers/Home.tsx","webpack:///./src/client/components/Post.tsx","webpack:///./src/client/containers/Scheduler.tsx","webpack:///./src/client/components/FormGroup.tsx","webpack:///./src/client/routes/NotFound.tsx","webpack:///./src/client/routes/Status.tsx","webpack:///./src/client/store/dev.ts","webpack:///./src/client/epics/index.ts","webpack:///./src/client/services/posts.ts","webpack:///./src/client/services/Request.ts","webpack:///./src/client/reducers/index.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"main\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"main\"] = factory();\n\telse\n\t\troot[\"main\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","import { State } from 'common';\n\nexport const API_ROOT = 'http://localhost:9001';\n\nexport const INITIAL_STATE: State = {\n  posts: [],\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/constants.ts","// tslint:disable:no-empty-interface\nimport { Action, Post } from 'common';\n\nexport const POSTS_REQUEST = 'POSTS_REQUEST';\nexport const POSTS_SUCCESS = 'POSTS_SUCCESS';\nexport const POSTS_FAILURE = 'POSTS_FAILURE';\n\nexport interface PostsRequestAction extends Action<typeof POSTS_REQUEST> {}\nexport interface PostsSuccessAction extends Action<typeof POSTS_SUCCESS> {\n  posts: Post[];\n}\nexport interface PostsFailureAction extends Action<typeof POSTS_FAILURE> {}\n\nexport const loadPosts = (): PostsRequestAction => (\n  { type: POSTS_REQUEST }\n);\n\nexport const setPosts = (posts: Post[]): PostsSuccessAction => {\n  return { type: POSTS_SUCCESS, posts };\n};\n\n/**\n * Schedule Post\n */\nexport const SCHEDULE_POST_REQUEST = 'SCHEDULE_POST_REQUEST';\nexport const SCHEDULE_POST_SUCCESS = 'SCHEDULE_POST_SUCCESS';\nexport const SCHEDULE_POST_FAILURE = 'SCHEDULE_POST_FAILURE';\n\nexport interface SchedulePostRequestAction extends Action<typeof SCHEDULE_POST_REQUEST> {\n  post: Post;\n}\nexport interface SchedulePostSuccessAction extends Action<typeof SCHEDULE_POST_SUCCESS> {\n  post: Post;\n}\nexport interface SchedulePostFailureAction extends Action<typeof SCHEDULE_POST_FAILURE> {\n  error: any;\n}\n\nexport const requestSchedulePost = (post: Post): SchedulePostRequestAction => {\n  return { type: SCHEDULE_POST_REQUEST, post };\n};\nexport const setScheduledPost = (post: Post): SchedulePostSuccessAction => {\n  return { type: SCHEDULE_POST_SUCCESS, post };\n};\nexport const errorSchedulePost = (error: any): SchedulePostFailureAction => {\n  return { type: SCHEDULE_POST_FAILURE, error };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/actions/index.ts","import * as React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { renderRoutes } from 'react-router-config';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { ExtendedWindow } from '../../definitions/global';\nimport { INITIAL_STATE } from './constants';\nimport routes from './routes';\nimport createStore from './store/dev';\n\nconst win: ExtendedWindow = window as ExtendedWindow;\nconst state = win && win.__INITIAL_STATE__ ? win.__INITIAL_STATE__ : INITIAL_STATE;\nconst store = createStore(state);\n\nrender(\n  <Provider store={store}>\n    <BrowserRouter>\n      {renderRoutes(routes)}\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/index.dev.tsx","import App from '../containers/App';\nimport Home from '../containers/Home';\nimport Scheduler from '../containers/Scheduler';\nimport NotFound from './NotFound';\n\nexport default [\n  {\n    component: App,\n    routes: [\n      {\n        path: '/',\n        exact: true,\n        component: Home,\n      },\n      {\n        path: '/schedule-post',\n        exact: true,\n        component: Scheduler,\n      },\n      {\n        path: '*',\n        component: NotFound,\n      },\n    ],\n  },\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/routes/index.ts","import * as React from 'react';\nimport { renderRoutes, RouteConfig } from 'react-router-config';\n\nimport Header from '../components/Header';\n\ninterface Props {\n  route?: RouteConfig;\n}\n\nexport default class App extends React.Component<Props, object> {\n  render() {\n    const { route } = this.props;\n\n    return (\n      <div className=\"wilson-post-app\">\n        <Header />\n        {route && renderRoutes(route.routes)}\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/containers/App.tsx","import * as React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class Header extends React.Component<object, object> {\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  render() {\n    return (\n      <div className=\"site-header\">\n        <div className=\"branding-container\">\n          <a href=\"/\" className=\"branding\" />\n        </div>\n        <nav className=\"site-nav\">\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/schedule-post\">Schedule a post</Link>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/components/Header.tsx","import { Post, State } from 'common';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\n\nimport PostComponent from '../components/Post';\n\ninterface Props {\n  posts?: Post[];\n}\n\nconst mapStateToProps = (state: State): State => ({\n  posts: state.posts,\n});\n\ntype AllProps = Readonly<State & Props>;\n\nclass Home extends React.Component<AllProps> {\n  constructor(props: AllProps) {\n    super(props);\n\n    this.renderPost = this.renderPost.bind(this);\n  }\n\n  renderPost(post: Post) {\n    return (\n      <PostComponent post={post} key={post.id} />\n    );\n  }\n\n  render() {\n    const { posts = [] } = this.props;\n\n    return (\n      <div className=\"wilson-post-home home\">\n        <div className=\"wilson-post-list\">\n          {posts.map(this.renderPost)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect<State, Props>(mapStateToProps, {})(Home);\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/containers/Home.tsx","import { Post } from 'common';\nimport * as React from 'react';\n\ninterface Props {\n  post: Post;\n}\n\nconst dateOptions = {\n  year: 'numeric',\n  month: 'short',\n  day: 'numeric',\n};\n\nconst timeOptions = {\n  hour: '2-digit',\n  minute: '2-digit',\n};\n\nexport default class extends React.Component<Props, object> {\n  static displayName = 'Post';\n\n  render() {\n    const { post = {} as Post } = this.props;\n    const date = new Date(post.date);\n\n    return (\n      <div className=\"posts-teaser slice\" key={post.id}>\n        <div className=\"container\">\n          <h2 className=\"posts-title\">\n            {post.title}\n          </h2>\n\n          <time className=\"posts-date meta\">\n            <span className=\"meta-content\">\n              {date.toLocaleString('en-US', dateOptions)}\n              {' at '}\n              {date.toLocaleTimeString('en-US', timeOptions)}\n              {post.author}\n            </span>\n          </time>\n\n          <p>{post.description}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/components/Post.tsx","import { Post, State } from 'common';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\n\nimport { History } from 'history';\n\nimport {\n  requestSchedulePost,\n  SchedulePostRequestAction,\n} from '../actions';\n\nimport FormGroup from '../components/FormGroup';\n\ninterface Props {\n  selectedPost?: Post;\n  history: History;\n}\n\ninterface DispatchProps {\n  requestSchedulePost: (post: Post) => SchedulePostRequestAction;\n}\n\nconst mapStateToProps = ({ selectedPost }: State): State => ({\n  selectedPost,\n});\n\nconst mapDispatchToProps: DispatchProps = {\n  requestSchedulePost,\n};\n\ntype AllProps = Readonly<State & DispatchProps & Props>;\n\nconst initialState = {\n  selectedPost: {\n    title: '',\n    description: '',\n  } as Post,\n};\n\nclass Scheduler extends React.Component<AllProps> {\n  state = initialState;\n\n  constructor(props: AllProps) {\n    super(props);\n\n    this.onTitleChange = this.onTitleChange.bind(this);\n    this.onDescriptionChange = this.onDescriptionChange.bind(this);\n    this.close = this.close.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    this.setState({ ...nextProps.selectedPost });\n  }\n\n  onTitleChange(event: React.SyntheticEvent<HTMLInputElement>) {\n    this.setState({\n      selectedPost: {\n        ...this.state.selectedPost,\n        title: event.currentTarget.value,\n      },\n    });\n  }\n\n  onDescriptionChange(event: React.SyntheticEvent<HTMLTextAreaElement>) {\n    this.setState({\n      selectedPost: {\n        ...this.state.selectedPost,\n        description: event.currentTarget.value,\n      },\n    });\n  }\n\n  close() {\n    this.setState(initialState);\n    this.props.history.replace('/');\n  }\n\n  render() {\n    const { selectedPost: { title = '', description = '' } } = this.state;\n\n    return (\n      <div className=\"scheduler container\">\n        <h2>Scheduler a post</h2>\n        <section>\n          <div className=\"form-fields\">\n            <FormGroup\n              field=\"title\"\n              label=\"Title\"\n              value={title}\n              onChange={this.onTitleChange}\n            />\n\n            <FormGroup\n              field=\"description\"\n              label=\"Description\"\n              value={description}\n              onChange={this.onDescriptionChange}\n            >\n              <textarea rows={10} />\n            </FormGroup>\n          </div>\n          <div className=\"form-buttons\">\n            <button onClick={this.close}>Cancel</button>\n            {' '}\n            <button>Save</button>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default connect<State, DispatchProps, Props>(mapStateToProps, mapDispatchToProps)(Scheduler);\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/containers/Scheduler.tsx","import * as React from 'react';\n\ninterface Props {\n  field: string;\n  label: string;\n  value: string;\n  onChange: (event: React.SyntheticEvent<HTMLElement>) => void;\n  children?: React.ReactElement<any>;\n}\n\nconst FormGroup = ({ field, label, value, onChange, children }: Props): JSX.Element => (\n  <div className=\"form-group\">\n    <div>\n      <label htmlFor={field}>{label}</label>\n    </div>\n    {children ? React.cloneElement(children, { value, onChange }) : (\n      <input value={value} onChange={onChange} />\n    )}\n  </div>\n);\n\nexport default FormGroup;\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/components/FormGroup.tsx","import * as React from 'react';\n\nimport Status from './Status';\n\nexport default (): JSX.Element => (\n  <Status status={404}>\n    <div>Not found</div>\n  </Status>\n);\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/routes/NotFound.tsx","import * as React from 'react';\nimport { Route, RouteComponentProps } from 'react-router-dom';\n\ninterface Props {\n  status?: number;\n  children?: React.ReactNode;\n}\n\nexport default ({ status, children }: Props) => (\n  <Route render={({ staticContext }: RouteComponentProps<any>) => {\n    if (staticContext) {\n      staticContext.status = status;\n    }\n\n    return children;\n  }} />\n);\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/routes/Status.tsx","import { State } from 'common';\nimport {\n  applyMiddleware,\n  compose,\n  createStore,\n  GenericStoreEnhancer,\n} from 'redux';\nimport { createLogger } from 'redux-logger';\nimport { createEpicMiddleware } from 'redux-observable';\n\nimport { ExtendedWindow } from '../../../definitions/global';\nimport rootEpic from '../epics';\nimport reducer from '../reducers';\n\nlet enhancer: GenericStoreEnhancer;\nconst epicMiddleware = createEpicMiddleware(rootEpic);\n\nconst hasDevtools = Boolean(\n  typeof window !== 'undefined' &&\n  (window as ExtendedWindow).__REDUX_DEVTOOLS_EXTENSION__ &&\n  (window as ExtendedWindow).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__,\n);\n\nif (hasDevtools) {\n  enhancer = (window as ExtendedWindow).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__(\n    compose(applyMiddleware(epicMiddleware, createLogger())),\n  );\n} else {\n  enhancer = compose(applyMiddleware(epicMiddleware, createLogger()));\n}\n\nexport default (initialState: State) => (\n  createStore<State>(reducer, initialState, enhancer)\n);\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/store/dev.ts","import { Action, Post, State } from 'common';\nimport { ActionsObservable, combineEpics, Epic } from 'redux-observable';\nimport * as Rx from 'rxjs';\n\nimport {\n  errorSchedulePost,\n  POSTS_REQUEST,\n  SCHEDULE_POST_FAILURE,\n  SCHEDULE_POST_REQUEST,\n  SCHEDULE_POST_SUCCESS,\n\n  SchedulePostFailureAction,\n  SchedulePostRequestAction,\n\n  setPosts,\n  setScheduledPost,\n} from '../actions';\n\nimport {\n  addPost,\n  getPosts,\n} from '../services/posts';\n\ntype TEpic = Epic<Action<string>, State>;\n\nconst getPostsEpic: TEpic = (action$: ActionsObservable<Action<typeof POSTS_REQUEST>>) =>\n  action$.ofType(POSTS_REQUEST)\n    .mergeMap(() => (\n      Rx.Observable.fromPromise(getPosts())\n        .map((posts: Post[]) => setPosts(posts))\n    ));\n\nconst addPostEpic: TEpic = (\n  action$: ActionsObservable<Action<typeof SCHEDULE_POST_REQUEST>>,\n): Rx.Observable<Action<typeof SCHEDULE_POST_SUCCESS | typeof SCHEDULE_POST_FAILURE>> =>\n  action$.ofType(SCHEDULE_POST_REQUEST)\n    .mergeMap((action: SchedulePostRequestAction) => (\n      Rx.Observable.fromPromise(addPost(action.post))\n        .map((post: Post) => setScheduledPost(post))\n        .catch((error: any): Rx.Observable<SchedulePostFailureAction> => (\n          Rx.Observable.of(errorSchedulePost(error))\n        ))\n    ));\n\nexport default combineEpics(getPostsEpic, addPostEpic);\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/epics/index.ts","import { Post } from 'common';\nimport * as urlJoin from 'url-join';\n\nimport { API_ROOT } from '../constants';\nimport Request from './Request';\n\nexport const getPosts = async () => (\n  await Request.get(urlJoin(API_ROOT, 'api', 'posts'))\n);\n\nexport const addPost = async (post: Post) => {\n  const payload = { post };\n\n  const url = urlJoin(API_ROOT, 'posts');\n  return await Request.post(url, payload);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/services/posts.ts","import 'isomorphic-fetch';\n\nconst methods = ['get', 'post', 'put', 'patch', 'delete'];\n\ninterface Request {\n  [key: string]: (endpoint: string, requestBody?: any) => Promise<Response>;\n}\n\nexport default methods.reduce((Request: Request, method) => ({\n  ...Request,\n  [method]: async (endpoint: string, requestBody?: any) => {\n    const response: Response = await fetch(endpoint, {\n      method,\n      ...(!requestBody ? {} : {\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }),\n    });\n\n    let results: any = await response.text();\n\n    if (response.headers) {\n      const contentType = response.headers.get('content-type');\n\n      if (contentType && contentType.match(/application\\/json/)) {\n        results = JSON.parse(results);\n      }\n    }\n\n    if (!response.ok) {\n      throw new Error(results);\n    }\n\n    return results;\n  },\n}), {} as Request);\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/services/Request.ts","import { Action, ReducersMapObject } from 'common';\n\nimport {\n  POSTS_SUCCESS,\n  PostsSuccessAction,\n  SCHEDULE_POST_SUCCESS,\n  SchedulePostSuccessAction,\n} from '../actions';\nimport { INITIAL_STATE } from '../constants';\n\nconst handleActions = (cases: ReducersMapObject) => (\n  (state = INITIAL_STATE, action: Action<string>) => (\n    (!action || !cases[action.type]) ? state : cases[action.type](state, action)\n  )\n);\n\nexport default handleActions({\n  [POSTS_SUCCESS]: (state, { posts }: PostsSuccessAction) => ({\n    ...state,\n    posts,\n  }),\n\n  [SCHEDULE_POST_SUCCESS]: (state, { post }: SchedulePostSuccessAction) => ({\n    ...state,\n    posts: [\n      ...(state.posts || []),\n      post,\n    ],\n  }),\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/reducers/index.ts"],"sourceRoot":""}